networks:
   express-network:
      driver: bridge
   nest-network:
      driver: bridge
   app-interaction-network:
      driver: bridge

services:
   mongo-db:
      image: mongo:latest
      restart: unless-stopped
      volumes:
         - mongo-db-data:/data/db
      environment:
         - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
         - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      command: ['mongod', '--port', '${MONGO_PORT}']
      networks:
         - nest-network
   redis:
      image: redis:latest
      working_dir: /data
      restart: unless-stopped
      volumes:
         - redis-data:/data
      command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
      networks:
         - express-network

   postgres-auth:
      image: postgres:17-alpine
      restart: unless-stopped
      environment:
         - POSTGRES_PASSWORD=${AUTH_POSTGRES_PASSWORD}
         - POSTGRES_USER=${AUTH_POSTGRES_USER}
         - POSTGRES_DB=${AUTH_POSTGRES_DB}
         - POSTGRES_HOST_AUTH_METHOD=${AUTH_POSTGRES_HOST_AUTH_METHOD}
         - POSTGRES_HOST=${AUTH_POSTGRES_HOST}
         - POSTGRES_PORT=${AUTH_POSTGRES_PORT}
      volumes:
         - postgres-auth-data:/var/lib/postgresql/data
      networks:
         - express-network
      command: ['postgres', '-p', '${AUTH_POSTGRES_PORT}']

   postgres-common:
      image: postgres:17-alpine
      restart: unless-stopped
      environment:
         - POSTGRES_PASSWORD=${COMMON_POSTGRES_PASSWORD}
         - POSTGRES_USER=${COMMON_POSTGRES_USER}
         - POSTGRES_DB=${COMMON_POSTGRES_DB}
         - POSTGRES_HOST_AUTH_METHOD=${COMMON_POSTGRES_HOST_AUTH_METHOD}
         - POSTGRES_PORT=${COMMON_POSTGRES_PORT}
      volumes:
         - postgres-common-data:/var/lib/postgresql/data
      networks:
         - nest-network
      command: ['postgres', '-p', '${COMMON_POSTGRES_PORT}']

   express:
      restart: unless-stopped
      build:
         context: .
         dockerfile: ./microservices/expressApp/Dockerfile
      depends_on:
         - postgres-auth
         - postgres-common
         - mongo-db
         - redis
      networks:
         - express-network
         - app-interaction-network

   nest:
      restart: unless-stopped
      build:
         context: .
         dockerfile: ./microservices/nest-app/Dockerfile
      depends_on:
         - express
      networks:
         - nest-network
         - app-interaction-network

volumes:
   postgres-auth-data:
   postgres-common-data:
   mongo-db-data:
   redis-data:
